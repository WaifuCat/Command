import cron from 'node-cron'

const jobs = [
    {
        time: "0 * * * *", 
        message: () => `
        ü§ñ ƒê√¢y L√† Tin Nh·∫Øn T·ª´ H·ªá Th·ªëng ü§ñ

        1Ô∏è‚É£ Vui l√≤ng kh√¥ng spam l·ªánh v√† tin nh·∫Øn.

        2Ô∏è‚É£ T√¥n tr·ªçng qu·∫£n tr·ªã vi√™n v√† c√°c th√†nh vi√™n kh√°c.

        3Ô∏è‚É£ Kh√¥ng g·ª≠i c√°c ƒë∆∞·ªùng link ƒë·ªôc h·∫°i, l·ª´a ƒë·∫£o.

        4Ô∏è‚É£ Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng ng√¥n ng·ªØ th√¥ t·ª•c, x√∫c ph·∫°m ho·∫∑c ph·∫£n ƒë·ªông.

        5Ô∏è‚É£ H√£y tu√¢n th·ªß c√°c y√™u c·∫ßu c·ªßa bot ƒë·ªÉ gi√∫p bot ho·∫°t ƒë·ªông hi·ªáu qu·∫£ v√† ƒë·∫£m b·∫£o tr·∫£i nghi·ªám s·ª≠ d·ª•ng t·ªët nh·∫•t cho t·∫•t c·∫£ m·ªçi ng∆∞·ªùi.

        >> C·∫£m ∆°n v√¨ ƒë√£ ƒë·ªçc, ch√∫c mn s·ª≠ d·ª•ng bot vui v·∫ª! <<

        `,
    },  
]

export default function autoSend() {
    cron.getTasks().forEach(task => task.stop());

    const timezone = global.config?.timezone || "Asia/Ho_Chi_Minh";
    if (!timezone) return;

    for (const job of jobs) {
        cron.schedule(job.time, () => {
            let i = 0;
            for (const tid of job.targetIDs || Array.from(global.data.threads.keys()) || []) {
                setTimeout(() => {
                    global.api.sendMessage({
                        body: job.message()
                    }, tid);
                }, (i++) * 300)
            }
        }, {
            timezone: timezone
        })
    }
}